import streamlit as st
from auth.auth_utils import require_login, show_user_info
from components.filters import create_filter_sidebar
from utils.simple_logger import get_logger

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Sistema SSO - Monitoramento",
    page_icon="üõ°Ô∏è",
    layout="wide",
    initial_sidebar_state="expanded"
)


def main():
    # Header principal
    st.title("üõ°Ô∏è Sistema de Monitoramento SSO")
    st.markdown("Seguran√ßa e Sa√∫de Ocupacional - An√°lise de Acidentes e KPIs")
    
    logger = get_logger()
    logger.info("Iniciando aplica√ß√£o principal")
    
    # Verifica autentica√ß√£o
    require_login()
    
    # Mostra informa√ß√µes do usu√°rio
    show_user_info()
    
    # Cria filtros na sidebar
    filters = create_filter_sidebar()
    
    # Define as p√°ginas dispon√≠veis
    page_options = {
        "üìä Vis√£o Geral": "pages/1_Visao_Geral.py",
        "üö® Acidentes": "pages/2_Acidentes.py", 
        "‚ö†Ô∏è Quase-Acidentes": "pages/3_Quase_Acidentes.py",
        "üìã N√£o Conformidades": "pages/4_Nao_Conformidades.py",
        "üìà KPIs e Controles": "pages/5_KPIs_e_Controles.py",
        "‚öôÔ∏è Dados B√°sicos": "pages/6_Admin_Dados_Basicos.py",
        "üìù Logs do Sistema": "pages/7_Logs_Sistema.py"
    }
    
    # Cria navega√ß√£o por sele√ß√£o
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        selected_page = st.selectbox(
            "Selecione uma p√°gina:",
            options=list(page_options.keys()),
            index=0,
            key="page_selector"
        )
    
    # Executa a p√°gina selecionada
    try:
        page_path = page_options[selected_page]
        logger.info(f"Carregando p√°gina: {page_path}")
        
        # Importa e executa a p√°gina
        import importlib.util
        spec = importlib.util.spec_from_file_location("page_module", page_path)
        if spec is None or spec.loader is None:
            error_msg = f"N√£o foi poss√≠vel carregar o m√≥dulo {page_path}"
            logger.error(error_msg)
            raise ImportError(error_msg)
        page_module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(page_module)
        
        # Executa a fun√ß√£o app() da p√°gina passando os filtros
        if hasattr(page_module, 'app'):
            logger.info(f"Executando p√°gina: {page_path}")
            page_module.app(filters)
        else:
            error_msg = f"P√°gina {page_path} n√£o possui fun√ß√£o 'app'"
            logger.error(error_msg)
            st.error(error_msg)
            
    except Exception as e:
        logger.error(f"Erro ao carregar p√°gina: {str(e)}")
        st.error(f"Erro ao carregar p√°gina: {str(e)}")
        st.info("Verifique se o arquivo da p√°gina existe e est√° configurado corretamente.")

if __name__ == "__main__":
    main()
