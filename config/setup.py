#!/usr/bin/env python3
"""
Script de configura√ß√£o inicial do Sistema SSO
"""
import os
import sys
import subprocess
from pathlib import Path

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ √© necess√°rio")
        sys.exit(1)
    print("‚úÖ Vers√£o do Python compat√≠vel")

def install_requirements():
    """Instala as depend√™ncias do requirements.txt"""
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ Depend√™ncias instaladas com sucesso")
    except subprocess.CalledProcessError:
        print("‚ùå Erro ao instalar depend√™ncias")
        sys.exit(1)

def create_env_file():
    """Cria arquivo .env se n√£o existir"""
    env_file = Path(".env")
    if not env_file.exists():
        env_content = """# Configura√ß√µes do Supabase
SUPABASE_URL=your_supabase_url_here
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Configura√ß√µes opcionais
# SUPABASE_SERVICE_ROLE_KEY=your_service_role_key_here
"""
        env_file.write_text(env_content)
        print("‚úÖ Arquivo .env criado")
        print("‚ö†Ô∏è  Configure as vari√°veis SUPABASE_URL e SUPABASE_ANON_KEY no arquivo .env")
    else:
        print("‚úÖ Arquivo .env j√° existe")

def create_directories():
    """Cria diret√≥rios necess√°rios"""
    directories = ["logs", "temp", "backups"]
    for directory in directories:
        Path(directory).mkdir(exist_ok=True)
    print("‚úÖ Diret√≥rios criados")

def check_streamlit():
    """Verifica se o Streamlit est√° funcionando"""
    try:
        import streamlit
        print("‚úÖ Streamlit dispon√≠vel")
    except ImportError:
        print("‚ùå Streamlit n√£o encontrado")
        return False
    return True

def main():
    """Fun√ß√£o principal de setup"""
    print("üõ°Ô∏è  Configurando Sistema SSO - Monitoramento")
    print("=" * 50)
    
    # Verifica√ß√µes
    check_python_version()
    
    # Instala√ß√£o
    install_requirements()
    
    # Configura√ß√£o
    create_env_file()
    create_directories()
    
    # Verifica√ß√£o final
    if check_streamlit():
        print("\n‚úÖ Setup conclu√≠do com sucesso!")
        print("\nüìã Pr√≥ximos passos:")
        print("1. Configure as vari√°veis no arquivo .env")
        print("2. Execute o script database_setup.sql no Supabase")
        print("3. Configure o Storage no Supabase (bucket 'evidencias')")
        print("4. Execute: streamlit run app.py")
    else:
        print("\n‚ùå Setup incompleto. Verifique os erros acima.")

if __name__ == "__main__":
    main()
