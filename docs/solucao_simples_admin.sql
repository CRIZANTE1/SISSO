-- =============================================
-- SOLU√á√ÉO SIMPLES: Acesso do Admin
-- =============================================

-- Esta solu√ß√£o resolve o problema de forma simples e direta

-- 1. DESABILITAR RLS temporariamente
ALTER TABLE profiles DISABLE ROW LEVEL SECURITY;

-- 2. Garantir que o perfil admin existe
INSERT INTO profiles (
    email,
    full_name,
    role,
    status,
    created_at,
    updated_at
) VALUES (
    'bboycrysforever@gmail.com',
    'Cristian Ferreira',
    'admin',
    'ativo',
    NOW(),
    NOW()
) ON CONFLICT (email) DO UPDATE SET
    full_name = EXCLUDED.full_name,
    role = EXCLUDED.role,
    status = EXCLUDED.status,
    updated_at = NOW();

-- 3. Verificar se foi criado
SELECT 
    'PERFIL ADMIN CRIADO' as status,
    email,
    full_name,
    role,
    status,
    created_at
FROM profiles 
WHERE email = 'bboycrysforever@gmail.com';

-- 4. REABILITAR RLS
ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;

-- 5. Criar pol√≠ticas simples (sem loop circular)
-- 5.1. Remover todas as pol√≠ticas existentes
DROP POLICY IF EXISTS "Admins can view all profiles" ON profiles;
DROP POLICY IF EXISTS "Admins can manage all profiles" ON profiles;
DROP POLICY IF EXISTS "Admins can create any profile" ON profiles;
DROP POLICY IF EXISTS "Users can view their own profile" ON profiles;
DROP POLICY IF EXISTS "Users can update their own profile" ON profiles;
DROP POLICY IF EXISTS "Users can create their own profile" ON profiles;
DROP POLICY IF EXISTS "Authenticated users can insert profiles" ON profiles;
DROP POLICY IF EXISTS "Service role can create profiles" ON profiles;

-- 5.2. Criar pol√≠ticas simples e funcionais
CREATE POLICY "Allow all for authenticated users" ON profiles
    FOR ALL USING (auth.jwt() ->> 'email' IS NOT NULL);

-- 6. Verificar se RLS est√° ativo
SELECT 
    'RLS STATUS' as status,
    tablename,
    rowsecurity as "RLS Ativo"
FROM pg_tables 
WHERE schemaname = 'public' 
AND tablename = 'profiles';

-- 7. Verificar pol√≠ticas finais
SELECT 
    'POL√çTICAS FINAIS' as status,
    policyname,
    cmd,
    with_check,
    qual
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename = 'profiles'
ORDER BY policyname;

-- 8. Teste final de acesso
SELECT 
    'TESTE FINAL' as status,
    email,
    full_name,
    role,
    status
FROM profiles 
WHERE email = 'bboycrysforever@gmail.com';

-- 9. Contar total de perfis
SELECT 
    'TOTAL PERFIS' as status,
    COUNT(*) as total
FROM profiles;

-- 10. Mensagem de sucesso
DO $$
BEGIN
    RAISE NOTICE 'üéâ SOLU√á√ÉO APLICADA COM SUCESSO!';
    RAISE NOTICE '‚úÖ Perfil do admin criado/atualizado';
    RAISE NOTICE '‚úÖ RLS reabilitado com pol√≠tica simples';
    RAISE NOTICE '‚úÖ Loop circular resolvido';
    RAISE NOTICE 'üîë Tente fazer login agora!';
    RAISE NOTICE 'üìß Email: bboycrysforever@gmail.com';
    RAISE NOTICE 'üëë Role: admin';
END $$;
